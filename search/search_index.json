{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"api/","title":"API Documentation","text":""},{"location":"api/#product-popularity-simulation-class","title":"Product Popularity Simulation Class","text":"<p>A simulation class to model the dynamics of product popularity over time, incorporating factors like natural growth, marketing impact, and promotional campaigns.</p> <p>Attributes:</p> Name Type Description <code>start_demand</code> <code>int</code> <p>Initial demand for the product.</p> <code>days</code> <code>int</code> <p>Duration of the simulation in days.</p> <code>growth_rate</code> <code>float</code> <p>Natural growth rate of product demand.</p> <code>marketing_impact</code> <code>float</code> <p>Impact of ongoing marketing efforts on demand.</p> <code>promotion_day</code> <code>Optional[int]</code> <p>Day on which a major marketing campaign starts (default is None).</p> <code>promotion_effectiveness</code> <code>float</code> <p>Effectiveness of the marketing campaign.</p> <code>random_seed</code> <code>Optional[int]</code> <p>The seed for the random number generator to ensure reproducibility (default is None).</p> <p>Methods:</p> Name Description <code>run_simulation</code> <p>Runs the simulation and returns a list of demand values over time.</p> Source code in <code>simulacra/product_popularity_simulation.py</code> <pre><code>class ProductPopularitySimulation:\n    \"\"\"\n    A simulation class to model the dynamics of product popularity over time,\n    incorporating factors like natural growth, marketing impact, and promotional campaigns.\n\n    Attributes:\n        start_demand (int): Initial demand for the product.\n        days (int): Duration of the simulation in days.\n        growth_rate (float): Natural growth rate of product demand.\n        marketing_impact (float): Impact of ongoing marketing efforts on demand.\n        promotion_day (Optional[int]): Day on which a major marketing campaign starts (default is None).\n        promotion_effectiveness (float): Effectiveness of the marketing campaign.\n        random_seed (Optional[int]): The seed for the random number generator to ensure reproducibility (default is None).\n\n    Methods:\n        run_simulation(): Runs the simulation and returns a list of demand values over time.\n    \"\"\"\n\n    def __init__(\n        self, start_demand: float, days: int, growth_rate: float, marketing_impact: float,\n        promotion_day: Optional[int] = None, promotion_effectiveness: float = 0,\n        random_seed: Optional[int] = None\n    ) -&gt; None:\n        \"\"\"\n        Initializes the ProductPopularitySimulation with all necessary parameters.\n\n        Parameters:\n            start_demand (int): The initial level of demand for the product.\n            days (int): The total number of days to simulate.\n            growth_rate (float): The natural daily growth rate of demand, as a decimal.\n            marketing_impact (float): Daily impact of marketing on demand, as a decimal.\n            promotion_day (Optional[int]): The specific day on which a promotional event occurs (defaults to None).\n            promotion_effectiveness (float): Multiplicative impact of the promotion on demand.\n            random_seed (Optional[int]): Seed for the random number generator to ensure reproducible results (defaults to None).\n        \"\"\"\n        self.start_demand = start_demand\n        self.days = days\n        self.growth_rate = growth_rate\n        self.marketing_impact = marketing_impact\n        self.promotion_day = promotion_day\n        self.promotion_effectiveness = promotion_effectiveness\n        self.random_seed = random_seed\n\n    def run_simulation(self) -&gt; List[float]:\n        \"\"\"\n        Simulates the demand for a product over a specified number of days based on the initial settings.\n\n        Returns:\n            List[int]: A list containing the demand for the product for each day of the simulation.\n        \"\"\"\n        if self.random_seed is not None:\n            np.random.seed(self.random_seed)\n\n        demand = [self.start_demand]\n        for day in range(1, self.days):\n            previous_demand = demand[-1]\n            natural_growth = previous_demand * (1 + self.growth_rate)\n            marketing_influence = previous_demand * self.marketing_impact\n\n            new_demand = natural_growth + marketing_influence\n\n            if day == self.promotion_day:\n                new_demand = (natural_growth + marketing_influence) * (1 + self.promotion_effectiveness)\n\n            demand.append(new_demand)\n\n        return demand\n</code></pre>"},{"location":"api/#simulacra.ProductPopularitySimulation.__init__","title":"<code>__init__(start_demand, days, growth_rate, marketing_impact, promotion_day=None, promotion_effectiveness=0, random_seed=None)</code>","text":"<p>Initializes the ProductPopularitySimulation with all necessary parameters.</p> <p>Parameters:</p> Name Type Description Default <code>start_demand</code> <code>int</code> <p>The initial level of demand for the product.</p> required <code>days</code> <code>int</code> <p>The total number of days to simulate.</p> required <code>growth_rate</code> <code>float</code> <p>The natural daily growth rate of demand, as a decimal.</p> required <code>marketing_impact</code> <code>float</code> <p>Daily impact of marketing on demand, as a decimal.</p> required <code>promotion_day</code> <code>Optional[int]</code> <p>The specific day on which a promotional event occurs (defaults to None).</p> <code>None</code> <code>promotion_effectiveness</code> <code>float</code> <p>Multiplicative impact of the promotion on demand.</p> <code>0</code> <code>random_seed</code> <code>Optional[int]</code> <p>Seed for the random number generator to ensure reproducible results (defaults to None).</p> <code>None</code> Source code in <code>simulacra/product_popularity_simulation.py</code> <pre><code>def __init__(\n    self, start_demand: float, days: int, growth_rate: float, marketing_impact: float,\n    promotion_day: Optional[int] = None, promotion_effectiveness: float = 0,\n    random_seed: Optional[int] = None\n) -&gt; None:\n    \"\"\"\n    Initializes the ProductPopularitySimulation with all necessary parameters.\n\n    Parameters:\n        start_demand (int): The initial level of demand for the product.\n        days (int): The total number of days to simulate.\n        growth_rate (float): The natural daily growth rate of demand, as a decimal.\n        marketing_impact (float): Daily impact of marketing on demand, as a decimal.\n        promotion_day (Optional[int]): The specific day on which a promotional event occurs (defaults to None).\n        promotion_effectiveness (float): Multiplicative impact of the promotion on demand.\n        random_seed (Optional[int]): Seed for the random number generator to ensure reproducible results (defaults to None).\n    \"\"\"\n    self.start_demand = start_demand\n    self.days = days\n    self.growth_rate = growth_rate\n    self.marketing_impact = marketing_impact\n    self.promotion_day = promotion_day\n    self.promotion_effectiveness = promotion_effectiveness\n    self.random_seed = random_seed\n</code></pre>"},{"location":"api/#simulacra.ProductPopularitySimulation.run_simulation","title":"<code>run_simulation()</code>","text":"<p>Simulates the demand for a product over a specified number of days based on the initial settings.</p> <p>Returns:</p> Type Description <code>List[float]</code> <p>List[int]: A list containing the demand for the product for each day of the simulation.</p> Source code in <code>simulacra/product_popularity_simulation.py</code> <pre><code>def run_simulation(self) -&gt; List[float]:\n    \"\"\"\n    Simulates the demand for a product over a specified number of days based on the initial settings.\n\n    Returns:\n        List[int]: A list containing the demand for the product for each day of the simulation.\n    \"\"\"\n    if self.random_seed is not None:\n        np.random.seed(self.random_seed)\n\n    demand = [self.start_demand]\n    for day in range(1, self.days):\n        previous_demand = demand[-1]\n        natural_growth = previous_demand * (1 + self.growth_rate)\n        marketing_influence = previous_demand * self.marketing_impact\n\n        new_demand = natural_growth + marketing_influence\n\n        if day == self.promotion_day:\n            new_demand = (natural_growth + marketing_influence) * (1 + self.promotion_effectiveness)\n\n        demand.append(new_demand)\n\n    return demand\n</code></pre>"}]}